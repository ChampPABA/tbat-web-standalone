'use client';

import React from 'react';
import Image from 'next/image';

interface ValidatorProfile {
  id: number;
  name: string;
  university: string;
  program: string;
  imageUrl?: string;
  achievements: string[];
}

interface PartnerLogo {
  id: number;
  name: string;
  logoUrl: string;
}

interface ValidatorSectionProps {
  validators?: ValidatorProfile[];
  partnerLogos?: PartnerLogo[];
}

const defaultValidators: ValidatorProfile[] = [
  {
    id: 1,
    name: "‡πÇ‡∏°‡πÇ‡∏°‡πà ‡∏≠‡∏ò‡∏¥‡∏ö‡∏î‡∏µ ‡∏Å‡∏≤‡∏£‡∏∞‡πÄ‡∏Å‡∏î",
    university: "‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
    program: "TCAS ‡∏£‡∏≠‡∏ö 1 Portfolio ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
    imageUrl: "/assets/validator1.jpg",
    achievements: [
      "‡∏ä‡∏ô‡∏∞‡πÄ‡∏•‡∏¥‡∏® Thailand Junior Water Prize 2024 (Stockholm, Sweden)",
      "‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ Asian Science Camp 2025",
      "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á YSC2024 ‡πÅ‡∏•‡∏∞ YSC2025",
      "‡πÇ‡∏≠‡∏•‡∏¥‡∏°‡∏õ‡∏¥‡∏Å‡πÄ‡∏Ñ‡∏°‡∏µ ‡∏Ñ‡πà‡∏≤‡∏¢ 2 ‡∏®‡∏π‡∏ô‡∏¢‡πå ‡∏°‡∏ä.",
      "‡πÇ‡∏≠‡∏•‡∏¥‡∏°‡∏õ‡∏¥‡∏Å‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå ‡∏Ñ‡πà‡∏≤‡∏¢ 1 ‡∏®‡∏π‡∏ô‡∏¢‡πå ‡∏°‡∏ä.",
      "‡∏£‡∏≠‡∏á‡∏ä‡∏ô‡∏∞‡πÄ‡∏•‡∏¥‡∏®‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö 4 Chem Challenge #12 ‡∏à‡∏∏‡∏¨‡∏≤‡∏Ø"
    ]
  },
  {
    id: 2,
    name: "‡∏Å‡∏≤‡∏ì‡∏ë‡πå ‡πÄ‡∏•‡∏≤‡∏´‡∏û‡∏π‡∏ô‡∏£‡∏±‡∏á‡∏©‡∏µ",
    university: "‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
    program: "‡∏ï‡∏¥‡∏î‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä TCAS ‡∏£‡∏≠‡∏ö 1 ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏î‡∏µ‡πÇ‡∏≠‡∏•‡∏¥‡∏°‡∏õ‡∏¥‡∏Å",
    imageUrl: "/assets/validator2.jpg",
    achievements: [
      "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏Ñ‡∏°‡∏µ‡πÇ‡∏≠‡∏•‡∏¥‡∏°‡∏õ‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 20",
      "‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå ‡∏°‡∏ä. TChO 19",
      "‡∏Ñ‡πà‡∏≤‡∏¢‡∏™‡∏™‡∏ß‡∏ó. 1 ‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏Ñ‡∏°‡∏µ",
      "‡∏ä‡∏ô‡∏∞‡πÄ‡∏•‡∏¥‡∏® Chem Challenge #11 ‡∏à‡∏∏‡∏¨‡∏≤‡∏Ø",
      "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á MU CHEM CONTEST",
      "Semi-Final SIMSAT #3 ‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä"
    ]
  },
  {
    id: 3,
    name: "‡∏†‡∏π‡∏ß‡πÄ‡∏î‡∏ä ‡πÄ‡∏Ç‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡∏ß",
    university: "‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏®‡∏¥‡∏£‡∏¥‡∏£‡∏≤‡∏ä‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• ‡∏õ‡∏µ 3",
    program: "‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏°‡∏´‡∏¥‡∏î‡∏•",
    imageUrl: "/assets/validator3.jpg",
    achievements: [
      "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á ‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡πÇ‡∏≠‡∏•‡∏¥‡∏°‡∏õ‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 19",
      "‡∏ú‡∏π‡πâ‡πÅ‡∏ó‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå ‡∏™‡∏≠‡∏ß‡∏ô. ‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡∏°‡∏ä. 2564",
      "‡∏Ñ‡πà‡∏≤‡∏¢‡∏™‡∏™‡∏ß‡∏ó. ‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ 2564",
      "‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á ‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡∏á‡∏≤‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ß‡∏¥‡∏ó‡∏¢‡πå 2564-2565",
      "100 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô A-level ‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ 2566"
    ]
  },
  {
    id: 4,
    name: "‡∏ô‡∏≤‡∏¢‡∏Å‡∏§‡∏ï‡∏¥‡∏ô ‡∏≠‡∏≤‡∏£‡∏µ‡∏¢‡πå‡∏£‡∏ö",
    university: "‡∏Ñ‡∏ì‡∏∞‡πÅ‡∏û‡∏ó‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏û‡∏£‡∏∞‡∏ö‡∏£‡∏°‡∏£‡∏≤‡∏ä‡∏ä‡∏ô‡∏Å PIMD ‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà 28",
    program: "",
    imageUrl: "/assets/validator4.jpg",
    achievements: [
      "‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á TPhO ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 20 ‡πÅ‡∏•‡∏∞ 21",
      "‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å IJSO ‡∏£‡∏≠‡∏ö 2",
      "‡∏™‡∏≠‡∏ô‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå A-Level ‡πÉ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏ß‡πÄ‡∏Ç‡πâ‡∏° ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏±‡πâ‡∏ß‡∏°‡∏´‡∏≤‡∏•‡∏±‡∏¢",
      "‡∏™‡∏≠‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏≠‡∏ö ‡∏™‡∏≠‡∏ß‡∏ô. ‡πÅ‡∏•‡∏∞ IJSO ‡πÉ‡∏´‡πâ‡∏£‡∏∏‡πà‡∏ô‡∏ô‡πâ‡∏≠‡∏á GMB"
    ]
  }
];

const defaultPartnerLogos: PartnerLogo[] = [
  { id: 1, name: "Partner 1", logoUrl: "/assets/Logo/1.jpg" },
  { id: 2, name: "Partner 2", logoUrl: "/assets/Logo/2.jpg" },
  { id: 3, name: "Partner 3", logoUrl: "/assets/Logo/3.jpg" },
  { id: 4, name: "Partner 4", logoUrl: "/assets/Logo/4.jpg" },
  { id: 5, name: "Partner 5", logoUrl: "/assets/Logo/5.png" }
];

const ValidatorSection: React.FC<ValidatorSectionProps> = ({
  validators = defaultValidators,
  partnerLogos = defaultPartnerLogos
}) => {
  return (
    <>
      {/* Validator Section */}
      <section className="py-12 md:py-16 bg-gradient-to-br from-tbat-bg to-white">
        <div className="max-w-6xl mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-center text-gray-800 mb-4">
            ‡∏ú‡∏π‡πâ‡∏Ñ‡∏±‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö
          </h2>
          <p className="text-lg text-gray-600 text-center mb-12 max-w-3xl mx-auto">
            ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏≠‡∏î‡∏µ‡∏ï‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÇ‡∏≠‡∏•‡∏¥‡∏°‡∏õ‡∏¥‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£ ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏≠‡∏ö TBAT ‡∏à‡∏£‡∏¥‡∏á
          </p>
          
          {/* Validator Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {validators.map((validator) => (
              <div
                key={validator.id}
                className="validator-card bg-white rounded-xl shadow-lg p-6 h-full transition-all duration-300 ease-in-out hover:transform hover:-translate-y-2 hover:shadow-2xl"
              >
                <div className="text-center mb-4">
                  {validator.imageUrl ? (
                    <Image
                      src={validator.imageUrl}
                      alt={validator.name}
                      className="w-32 h-32 rounded-full mx-auto object-cover mb-3"
                      width={128}
                      height={128}
                      style={validator.id === 3 ? { objectPosition: '50% 30%' } : undefined}
                      onError={(e) => {
                        const target = e.target as HTMLImageElement;
                        target.style.display = 'none';
                        const fallback = target.nextElementSibling as HTMLElement;
                        if (fallback) fallback.style.display = 'flex';
                      }}
                    />
                  ) : null}
                  {!validator.imageUrl && (
                    <div className="w-32 h-32 rounded-full mx-auto bg-gray-200 flex items-center justify-center mb-3">
                      <span className="text-4xl text-gray-400">üë§</span>
                    </div>
                  )}
                  <h3 className="text-xl font-bold text-gray-800">{validator.name}</h3>
                  <p className="text-sm text-tbat-primary font-semibold">{validator.university}</p>
                  {validator.program && (
                    <p className="text-xs text-gray-600">{validator.program}</p>
                  )}
                </div>
                <div className="text-sm text-gray-700">
                  <h4 className="font-semibold mb-2">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥/‡∏ú‡∏•‡∏á‡∏≤‡∏ô:</h4>
                  <ul className="space-y-1 text-xs">
                    {validator.achievements.map((achievement, index) => (
                      <li key={index}>‚Ä¢ {achievement}</li>
                    ))}
                  </ul>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Credibility/Partners Section */}
      <section className="bg-gray-50 py-12 md:py-16 mt-6">
        <div className="max-w-6xl mx-auto px-4 text-center">
          <h2 className="text-2xl md:text-3xl font-bold text-gray-800 mb-4">
            ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡∏≠‡∏ö TBAT Mock Exam ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ ASPECT
          </h2>
          <p className="text-lg text-gray-600 mb-8">
            ‡∏ã‡∏∂‡πà‡∏á ASPECT ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£
          </p>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6 mb-12 items-center justify-items-center">
            {partnerLogos.map((partner) => (
              <div
                key={partner.id}
                className="bg-white p-4 rounded-lg shadow-sm flex items-center justify-center h-24 w-full"
              >
                <Image
                  src={partner.logoUrl}
                  alt={partner.name}
                  className="max-h-16 max-w-full object-contain"
                  width={120}
                  height={64}
                  onError={(e) => {
                    const target = e.target as HTMLImageElement;
                    target.style.opacity = '0.3';
                    target.alt = 'Logo unavailable';
                  }}
                />
              </div>
            ))}
          </div>
        </div>
      </section>
    </>
  );
};

export default ValidatorSection;